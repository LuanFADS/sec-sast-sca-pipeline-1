# This is a basic workflow to help you get started with Actions
name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode install -DskipTests
      - uses: actions/upload-artifact@v2
        with:
          name: Target
          path: target
          retention-days: 1
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Test with Maven
        run: mvn --batch-mode test
  component-analysis:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - uses: actions/download-artifact@v2
        with:
          name: Target
          path: target
      - name: component-analysis
        run: |
          MVN_GROUPID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.groupId}' exec:exec)
          MVN_ARTIFACTID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' exec:exec)
          MVN_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' exec:exec)
          curl -X "POST" "${{ secrets.DEPENDENCYTRACK_HOSTNAME }}" \
               -H 'Content-Type: multipart/form-data' \
               -H 'X-API-Key: ${{ secrets.DEPENDENCYTRACK_APIKEY }} ' \
               -F "autoCreate=true" \
               -F "projectName=$MVN_GROUPID:$MVN_ARTIFACTID" \
               -F "projectVersion=$MVN_VERSION" \
               -F "bom=@target/bom.xml"
  sonar-analysis:
    needs: test
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup SDK
        uses: actions/setup-java@v2
        with: 
          java-version: '11'
          distribution: 'adopt'
      - name: Run Sonar Analysis
        run: |
          MVN_GROUPID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.groupId}' exec:exec)
          MVN_ARTIFACTID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' exec:exec)
          MVN_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' exec:exec)          
          mvn -B verify -DskipTests sonar:sonar \
                -Dsonar.login=$SONAR_TOKEN \
                -Dsonar.organization="rafaelrasso-1" \
                -Dsonar.projectKey="rafaelrasso_sec-sast-sca-pipeline" \
                -Dsonar.projectName="$MVN_GROUPID:$MVN_ARTIFACTID" \
                -Dsonar.projectVersion="$MVN_VERSION" \
                -Dsonar.sourceEncoding="UTF-8" 
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}              